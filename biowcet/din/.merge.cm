
typedef unsigned char __u_char;

typedef unsigned short int __u_short;

typedef unsigned int __u_int;

typedef unsigned long int __u_long;

typedef signed char __int8_t;

typedef unsigned char __uint8_t;

typedef signed short int __int16_t;

typedef unsigned short int __uint16_t;

typedef signed int __int32_t;

typedef unsigned int __uint32_t;

typedef signed long int __int64_t;

typedef unsigned long int __uint64_t;

typedef __int8_t __int_least8_t;

typedef __uint8_t __uint_least8_t;

typedef __int16_t __int_least16_t;

typedef __uint16_t __uint_least16_t;

typedef __int32_t __int_least32_t;

typedef __uint32_t __uint_least32_t;

typedef __int64_t __int_least64_t;

typedef __uint64_t __uint_least64_t;

typedef long int __quad_t;

typedef unsigned long int __u_quad_t;

typedef long int __intmax_t;

typedef unsigned long int __uintmax_t;

typedef unsigned long int __dev_t;

typedef unsigned int __uid_t;

typedef unsigned int __gid_t;

typedef unsigned long int __ino_t;

typedef unsigned long int __ino64_t;

typedef unsigned int __mode_t;

typedef unsigned long int __nlink_t;

typedef long int __off_t;

typedef long int __off64_t;

typedef int __pid_t;

typedef struct  {
	int __val[2];
} __fsid_t;

typedef long int __clock_t;

typedef unsigned long int __rlim_t;

typedef unsigned long int __rlim64_t;

typedef unsigned int __id_t;

typedef long int __time_t;

typedef unsigned int __useconds_t;

typedef long int __suseconds_t;

typedef long int __suseconds64_t;

typedef int __daddr_t;

typedef int __key_t;

typedef int __clockid_t;

typedef void *__timer_t;

typedef long int __blksize_t;

typedef long int __blkcnt_t;

typedef long int __blkcnt64_t;

typedef unsigned long int __fsblkcnt_t;

typedef unsigned long int __fsblkcnt64_t;

typedef unsigned long int __fsfilcnt_t;

typedef unsigned long int __fsfilcnt64_t;

typedef long int __fsword_t;

typedef long int __ssize_t;

typedef long int __syscall_slong_t;

typedef unsigned long int __syscall_ulong_t;

typedef __off64_t __loff_t;

typedef char *__caddr_t;

typedef long int __intptr_t;

typedef unsigned int __socklen_t;

typedef int __sig_atomic_t;

typedef __int8_t int8_t;

typedef __int16_t int16_t;

typedef __int32_t int32_t;

typedef __int64_t int64_t;

typedef __uint8_t uint8_t;

typedef __uint16_t uint16_t;

typedef __uint32_t uint32_t;

typedef __uint64_t uint64_t;

typedef __int_least8_t int_least8_t;

typedef __int_least16_t int_least16_t;

typedef __int_least32_t int_least32_t;

typedef __int_least64_t int_least64_t;

typedef __uint_least8_t uint_least8_t;

typedef __uint_least16_t uint_least16_t;

typedef __uint_least32_t uint_least32_t;

typedef __uint_least64_t uint_least64_t;

typedef signed char int_fast8_t;

typedef long int int_fast16_t;

typedef long int int_fast32_t;

typedef long int int_fast64_t;

typedef unsigned char uint_fast8_t;

typedef unsigned long int uint_fast16_t;

typedef unsigned long int uint_fast32_t;

typedef unsigned long int uint_fast64_t;

typedef long int intptr_t;

typedef unsigned long int uintptr_t;

typedef __intmax_t intmax_t;

typedef __uintmax_t uintmax_t;

typedef unsigned long int size_t;

typedef int wchar_t;

typedef struct  {
	int quot;
	int rem;
} div_t;

typedef struct  {
	long int quot;
	long int rem;
} ldiv_t;

__extension__ typedef struct  {
	long long int quot;
	long long int rem;
} lldiv_t;

size_t __ctype_get_mb_cur_max(void ) __attribute__ ((__leaf__, __nothrow__)) ;
double atof(char  const *__nptr) __attribute__ ((__nonnull__(1), __pure__,
	__leaf__, __nothrow__)) ;
int atoi(char  const *__nptr) __attribute__ ((__nonnull__(1), __pure__,
	__leaf__, __nothrow__)) ;
long int atol(char  const *__nptr) __attribute__ ((__nonnull__(1), __pure__,
	__leaf__, __nothrow__)) ;
long long int atoll(char  const *__nptr) __attribute__ ((__nonnull__(1),
	__pure__, __leaf__, __nothrow__)) ;
double strtod(char  const * __restrict __nptr, char ** __restrict
	__endptr) __attribute__ ((__nonnull__(1), __leaf__, __nothrow__)) ;
float strtof(char  const * __restrict __nptr, char ** __restrict
	__endptr) __attribute__ ((__nonnull__(1), __leaf__, __nothrow__)) ;
long double strtold(char  const * __restrict __nptr, char ** __restrict
	__endptr) __attribute__ ((__nonnull__(1), __leaf__, __nothrow__)) ;
long int strtol(char  const * __restrict __nptr, char ** __restrict __endptr,
	int __base) __attribute__ ((__nonnull__(1), __leaf__, __nothrow__)) ;
unsigned long int strtoul(char  const * __restrict __nptr, char ** __restrict
	__endptr, int __base) __attribute__ ((__nonnull__(1), __leaf__,
	__nothrow__)) ;
long long int strtoq(char  const * __restrict __nptr, char ** __restrict
	__endptr, int __base) __attribute__ ((__nonnull__(1), __leaf__,
	__nothrow__)) ;
unsigned long long int strtouq(char  const * __restrict __nptr, char
	** __restrict __endptr, int __base) __attribute__ ((__nonnull__(1),
	__leaf__, __nothrow__)) ;
long long int strtoll(char  const * __restrict __nptr, char ** __restrict
	__endptr, int __base) __attribute__ ((__nonnull__(1), __leaf__,
	__nothrow__)) ;
unsigned long long int strtoull(char  const * __restrict __nptr, char
	** __restrict __endptr, int __base) __attribute__ ((__nonnull__(1),
	__leaf__, __nothrow__)) ;
char *l64a(long int __n) __attribute__ ((__leaf__, __nothrow__)) ;
long int a64l(char  const *__s) __attribute__ ((__nonnull__(1), __pure__,
	__leaf__, __nothrow__)) ;

typedef __u_char u_char;

typedef __u_short u_short;

typedef __u_int u_int;

typedef __u_long u_long;

typedef __quad_t quad_t;

typedef __u_quad_t u_quad_t;

typedef __fsid_t fsid_t;

typedef __loff_t loff_t;

typedef __ino_t ino_t;

typedef __dev_t dev_t;

typedef __gid_t gid_t;

typedef __mode_t mode_t;

typedef __nlink_t nlink_t;

typedef __uid_t uid_t;

typedef __off_t off_t;

typedef __pid_t pid_t;

typedef __id_t id_t;

typedef __ssize_t ssize_t;

typedef __daddr_t daddr_t;

typedef __caddr_t caddr_t;

typedef __key_t key_t;

typedef __clock_t clock_t;

typedef __clockid_t clockid_t;

typedef __time_t time_t;

typedef __timer_t timer_t;

typedef unsigned long int ulong;

typedef unsigned short int ushort;

typedef unsigned int uint;

typedef __uint8_t u_int8_t;

typedef __uint16_t u_int16_t;

typedef __uint32_t u_int32_t;

typedef __uint64_t u_int64_t;

typedef int register_t __attribute__ ((__mode__(__word__))) ;

static  __attribute__ ((__inline__)) __uint16_t __bswap_16(__uint16_t __bsx)
{
# 37 "/usr/include/x86_64-linux-gnu/bits/byteswap.h"
	return __builtin_bswap16(__bsx);
}

static  __attribute__ ((__inline__)) __uint32_t __bswap_32(__uint32_t __bsx_0)
{
# 52 "/usr/include/x86_64-linux-gnu/bits/byteswap.h"
	return __builtin_bswap32(__bsx_0);
}

static  __attribute__ ((__inline__)) __uint64_t __bswap_64(__uint64_t __bsx_1)
{
# 73 "/usr/include/x86_64-linux-gnu/bits/byteswap.h"
	return __builtin_bswap64(__bsx_1);
}

static  __attribute__ ((__inline__)) __uint16_t __uint16_identity(__uint16_t
	__x)
{
# 35 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h"
	return __x;
}

static  __attribute__ ((__inline__)) __uint32_t __uint32_identity(__uint32_t
	__x_0)
{
# 41 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h"
	return __x_0;
}

static  __attribute__ ((__inline__)) __uint64_t __uint64_identity(__uint64_t
	__x_1)
{
# 47 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h"
	return __x_1;
}

typedef struct  {
	unsigned long int __val[1024 / ((8 * sizeof(unsigned long int)))];
} __sigset_t;

typedef __sigset_t sigset_t;

struct timeval {
	__time_t tv_sec;
	__suseconds_t tv_usec;
} ;

struct timespec {
	__time_t tv_sec;
	__syscall_slong_t tv_nsec;
} ;

typedef __suseconds_t suseconds_t;

typedef long int __fd_mask;

typedef struct  {
	__fd_mask __fds_bits[1024 / ((8 * (int)sizeof(__fd_mask)))];
} fd_set;

typedef __fd_mask fd_mask;

int select(int __nfds, fd_set * __restrict __readfds, fd_set * __restrict
	__writefds, fd_set * __restrict __exceptfds, struct timeval * __restrict
	__timeout);
int pselect(int __nfds, fd_set * __restrict __readfds, fd_set * __restrict
	__writefds, fd_set * __restrict __exceptfds, struct timespec
	 const * __restrict __timeout, __sigset_t  const * __restrict
	__sigmask);

typedef __blksize_t blksize_t;

typedef __blkcnt_t blkcnt_t;

typedef __fsblkcnt_t fsblkcnt_t;

typedef __fsfilcnt_t fsfilcnt_t;

typedef union  {
	unsigned long long int __value64;
	struct  {
		unsigned int __low;
		unsigned int __high;
	} __value32;
} __atomic_wide_counter;

typedef struct __pthread_internal_list {
	struct __pthread_internal_list *__prev;
	struct __pthread_internal_list *__next;
} __pthread_list_t;

typedef struct __pthread_internal_slist {
	struct __pthread_internal_slist *__next;
} __pthread_slist_t;

struct __pthread_mutex_s {
	int __lock;
	unsigned int __count;
	int __owner;
	unsigned int __nusers;
	int __kind;
	short int __spins;
	short int __elision;
	__pthread_list_t __list;
} ;

struct __pthread_rwlock_arch_t {
	unsigned int __readers;
	unsigned int __writers;
	unsigned int __wrphase_futex;
	unsigned int __writers_futex;
	unsigned int __pad3;
	unsigned int __pad4;
	int __cur_writer;
	int __shared;
	signed char __rwelision;
	unsigned char __pad1[7];
	unsigned long int __pad2;
	unsigned int __flags;
} ;

struct __pthread_cond_s {
	__atomic_wide_counter __wseq;
	__atomic_wide_counter __g1_start;
	unsigned int __g_refs[2];
	unsigned int __g_size[2];
	unsigned int __g1_orig_size;
	unsigned int __wrefs;
	unsigned int __g_signals[2];
} ;

typedef unsigned int __tss_t;

typedef unsigned long int __thrd_t;

typedef struct  {
	int __data;
} __once_flag;

typedef unsigned long int pthread_t;

typedef union  {
	char __size[4];
	int __align;
} pthread_mutexattr_t;

typedef union  {
	char __size[4];
	int __align;
} pthread_condattr_t;

typedef unsigned int pthread_key_t;

typedef int pthread_once_t;

union pthread_attr_t {
	char __size[56];
	long int __align;
} ;

typedef union pthread_attr_t pthread_attr_t;

typedef union  {
	struct __pthread_mutex_s __data;
	char __size[40];
	long int __align;
} pthread_mutex_t;

typedef union  {
	struct __pthread_cond_s __data;
	char __size[48];
	long long int __align;
} pthread_cond_t;

typedef union  {
	struct __pthread_rwlock_arch_t __data;
	char __size[56];
	long int __align;
} pthread_rwlock_t;

typedef union  {
	char __size[8];
	long int __align;
} pthread_rwlockattr_t;

typedef int  volatile pthread_spinlock_t;

typedef union  {
	char __size[32];
	long int __align;
} pthread_barrier_t;

typedef union  {
	char __size[4];
	int __align;
} pthread_barrierattr_t;

long int random(void ) __attribute__ ((__leaf__, __nothrow__)) ;
void srandom(unsigned int __seed) __attribute__ ((__leaf__, __nothrow__)) ;
char *initstate(unsigned int __seed, char *__statebuf, size_t
	__statelen) __attribute__ ((__nonnull__(2), __leaf__, __nothrow__)) ;
char *setstate(char *__statebuf) __attribute__ ((__nonnull__(1), __leaf__,
	__nothrow__)) ;

struct random_data {
	int32_t *fptr;
	int32_t *rptr;
	int32_t *state;
	int rand_type;
	int rand_deg;
	int rand_sep;
	int32_t *end_ptr;
} ;

int random_r(struct random_data * __restrict __buf, int32_t * __restrict
	__result) __attribute__ ((__nonnull__(1, 2), __leaf__, __nothrow__)) ;
int srandom_r(unsigned int __seed, struct random_data
	*__buf) __attribute__ ((__nonnull__(2), __leaf__, __nothrow__)) ;
int initstate_r(unsigned int __seed, char * __restrict __statebuf, size_t
	__statelen, struct random_data * __restrict
	__buf) __attribute__ ((__nonnull__(2, 4), __leaf__, __nothrow__)) ;
int setstate_r(char * __restrict __statebuf, struct random_data * __restrict
	__buf) __attribute__ ((__nonnull__(1, 2), __leaf__, __nothrow__)) ;
int rand(void ) __attribute__ ((__leaf__, __nothrow__)) ;
void srand(unsigned int __seed) __attribute__ ((__leaf__, __nothrow__)) ;
int rand_r(unsigned int *__seed) __attribute__ ((__leaf__, __nothrow__)) ;
double drand48(void ) __attribute__ ((__leaf__, __nothrow__)) ;
double erand48(unsigned short int __xsubi[3]) __attribute__ ((__nonnull__(1),
	__leaf__, __nothrow__)) ;
long int lrand48(void ) __attribute__ ((__leaf__, __nothrow__)) ;
long int nrand48(unsigned short int __xsubi[3]) __attribute__ ((__nonnull__(1),
	__leaf__, __nothrow__)) ;
long int mrand48(void ) __attribute__ ((__leaf__, __nothrow__)) ;
long int jrand48(unsigned short int __xsubi[3]) __attribute__ ((__nonnull__(1),
	__leaf__, __nothrow__)) ;
void srand48(long int __seedval) __attribute__ ((__leaf__, __nothrow__)) ;
unsigned short int *seed48(unsigned short int
	__seed16v[3]) __attribute__ ((__nonnull__(1), __leaf__, __nothrow__)) ;
void lcong48(unsigned short int __param[7]) __attribute__ ((__nonnull__(1),
	__leaf__, __nothrow__)) ;

struct drand48_data {
	unsigned short int __x[3];
	unsigned short int __old_x[3];
	unsigned short int __c;
	unsigned short int __init;
	unsigned long long int __a;
} ;

int drand48_r(struct drand48_data * __restrict __buffer, double * __restrict
	__result) __attribute__ ((__nonnull__(1, 2), __leaf__, __nothrow__)) ;
int erand48_r(unsigned short int __xsubi[3], struct drand48_data * __restrict
	__buffer, double * __restrict __result) __attribute__ ((__nonnull__(1,
	2), __leaf__, __nothrow__)) ;
int lrand48_r(struct drand48_data * __restrict __buffer, long int * __restrict
	__result) __attribute__ ((__nonnull__(1, 2), __leaf__, __nothrow__)) ;
int nrand48_r(unsigned short int __xsubi[3], struct drand48_data * __restrict
	__buffer, long int * __restrict __result) __attribute__ ((__nonnull__(1,
	2), __leaf__, __nothrow__)) ;
int mrand48_r(struct drand48_data * __restrict __buffer, long int * __restrict
	__result) __attribute__ ((__nonnull__(1, 2), __leaf__, __nothrow__)) ;
int jrand48_r(unsigned short int __xsubi[3], struct drand48_data * __restrict
	__buffer, long int * __restrict __result) __attribute__ ((__nonnull__(1,
	2), __leaf__, __nothrow__)) ;
int srand48_r(long int __seedval, struct drand48_data
	*__buffer) __attribute__ ((__nonnull__(2), __leaf__, __nothrow__)) ;
int seed48_r(unsigned short int __seed16v[3], struct drand48_data
	*__buffer) __attribute__ ((__nonnull__(1, 2), __leaf__, __nothrow__)) ;
int lcong48_r(unsigned short int __param[7], struct drand48_data
	*__buffer) __attribute__ ((__nonnull__(1, 2), __leaf__, __nothrow__)) ;
void *malloc(size_t __size) __attribute__ ((__alloc_size__(1), __malloc__,
	__leaf__, __nothrow__)) ;
void *calloc(size_t __nmemb, size_t __size) __attribute__ ((__alloc_size__(1,
	2), __malloc__, __leaf__, __nothrow__)) ;
void *realloc(void *__ptr, size_t __size) __attribute__ ((__alloc_size__(2),
	__warn_unused_result__, __leaf__, __nothrow__)) ;
void free(void *__ptr) __attribute__ ((__leaf__, __nothrow__)) ;
void *reallocarray(void *__ptr, size_t __nmemb, size_t
	__size) __attribute__ ((__malloc__(__builtin_free, 1), __alloc_size__(2,
	3), __warn_unused_result__, __leaf__, __nothrow__)) ;
void *alloca(size_t __size) __attribute__ ((__leaf__, __nothrow__)) ;
void *valloc(size_t __size) __attribute__ ((__alloc_size__(1), __malloc__,
	__leaf__, __nothrow__)) ;
int posix_memalign(void **__memptr, size_t __alignment, size_t
	__size) __attribute__ ((__nonnull__(1), __leaf__, __nothrow__)) ;
void *aligned_alloc(size_t __alignment, size_t
	__size) __attribute__ ((__alloc_size__(2), __alloc_align__(1),
	__malloc__, __leaf__, __nothrow__)) ;
void abort(void ) __attribute__ ((__noreturn__, __leaf__, __nothrow__)) ;
int atexit(void (*__func)(void )) __attribute__ ((__nonnull__(1), __leaf__,
	__nothrow__)) ;
int at_quick_exit(void (*__func)(void )) __attribute__ ((__nonnull__(1),
	__leaf__, __nothrow__)) ;
int on_exit(void (*__func)(int __status, void *__arg), void
	*__arg) __attribute__ ((__nonnull__(1), __leaf__, __nothrow__)) ;
void exit(int __status) __attribute__ ((__noreturn__, __leaf__, __nothrow__)) ;
void quick_exit(int __status) __attribute__ ((__noreturn__, __leaf__,
	__nothrow__)) ;
void _Exit(int __status) __attribute__ ((__noreturn__, __leaf__, __nothrow__)) ;
char *getenv(char  const *__name) __attribute__ ((__nonnull__(1), __leaf__,
	__nothrow__)) ;
int putenv(char *__string) __attribute__ ((__nonnull__(1), __leaf__,
	__nothrow__)) ;
int setenv(char  const *__name, char  const *__value, int
	__replace) __attribute__ ((__nonnull__(2), __leaf__, __nothrow__)) ;
int unsetenv(char  const *__name) __attribute__ ((__nonnull__(1), __leaf__,
	__nothrow__)) ;
int clearenv(void ) __attribute__ ((__leaf__, __nothrow__)) ;
char *mktemp(char *__template) __attribute__ ((__nonnull__(1), __leaf__,
	__nothrow__)) ;
int mkstemp(char *__template) __attribute__ ((__nonnull__(1))) ;
int mkstemps(char *__template, int
	__suffixlen) __attribute__ ((__nonnull__(1))) ;
char *mkdtemp(char *__template) __attribute__ ((__nonnull__(1), __leaf__,
	__nothrow__)) ;
int system(char  const *__command);
char *realpath(char  const * __restrict __name, char * __restrict
	__resolved) __attribute__ ((__leaf__, __nothrow__)) ;

typedef int (*__compar_fn_t)(void  const *, void  const *);

void *bsearch(void  const *__key, void  const *__base, size_t __nmemb, size_t
	__size, __compar_fn_t __compar) __attribute__ ((__nonnull__(1, 2, 5))) ;
void qsort(void *__base, size_t __nmemb, size_t __size, __compar_fn_t
	__compar) __attribute__ ((__nonnull__(1, 4))) ;
int abs(int __x) __attribute__ ((__const__, __leaf__, __nothrow__)) ;
long int labs(long int __x) __attribute__ ((__const__, __leaf__, __nothrow__)) ;
long long int llabs(long long int __x) __attribute__ ((__const__, __leaf__,
	__nothrow__)) ;
div_t div(int __numer, int __denom) __attribute__ ((__const__, __leaf__,
	__nothrow__)) ;
ldiv_t ldiv(long int __numer, long int __denom) __attribute__ ((__const__,
	__leaf__, __nothrow__)) ;
lldiv_t lldiv(long long int __numer, long long int
	__denom) __attribute__ ((__const__, __leaf__, __nothrow__)) ;
char *ecvt(double __value, int __ndigit, int * __restrict __decpt, int
	* __restrict __sign) __attribute__ ((__nonnull__(3, 4), __leaf__,
	__nothrow__)) ;
char *fcvt(double __value, int __ndigit, int * __restrict __decpt, int
	* __restrict __sign) __attribute__ ((__nonnull__(3, 4), __leaf__,
	__nothrow__)) ;
char *gcvt(double __value, int __ndigit, char
	*__buf) __attribute__ ((__nonnull__(3), __leaf__, __nothrow__)) ;
char *qecvt(long double __value, int __ndigit, int * __restrict __decpt, int
	* __restrict __sign) __attribute__ ((__nonnull__(3, 4), __leaf__,
	__nothrow__)) ;
char *qfcvt(long double __value, int __ndigit, int * __restrict __decpt, int
	* __restrict __sign) __attribute__ ((__nonnull__(3, 4), __leaf__,
	__nothrow__)) ;
char *qgcvt(long double __value, int __ndigit, char
	*__buf) __attribute__ ((__nonnull__(3), __leaf__, __nothrow__)) ;
int ecvt_r(double __value, int __ndigit, int * __restrict __decpt, int
	* __restrict __sign, char * __restrict __buf, size_t
	__len) __attribute__ ((__nonnull__(3, 4, 5), __leaf__, __nothrow__)) ;
int fcvt_r(double __value, int __ndigit, int * __restrict __decpt, int
	* __restrict __sign, char * __restrict __buf, size_t
	__len) __attribute__ ((__nonnull__(3, 4, 5), __leaf__, __nothrow__)) ;
int qecvt_r(long double __value, int __ndigit, int * __restrict __decpt, int
	* __restrict __sign, char * __restrict __buf, size_t
	__len) __attribute__ ((__nonnull__(3, 4, 5), __leaf__, __nothrow__)) ;
int qfcvt_r(long double __value, int __ndigit, int * __restrict __decpt, int
	* __restrict __sign, char * __restrict __buf, size_t
	__len) __attribute__ ((__nonnull__(3, 4, 5), __leaf__, __nothrow__)) ;
int mblen(char  const *__s, size_t __n) __attribute__ ((__leaf__,
	__nothrow__)) ;
int mbtowc(wchar_t * __restrict __pwc, char  const * __restrict __s, size_t
	__n) __attribute__ ((__leaf__, __nothrow__)) ;
int wctomb(char *__s, wchar_t __wchar) __attribute__ ((__leaf__, __nothrow__)) ;
size_t mbstowcs(wchar_t * __restrict __pwcs, char  const * __restrict __s,
	size_t __n) __attribute__ ((__access__(__read_only__, 2), __leaf__,
	__nothrow__)) ;
size_t wcstombs(char * __restrict __s, wchar_t  const * __restrict __pwcs,
	size_t __n) __attribute__ ((__access__(__read_only__, 2),
	__access__(__write_only__, 1, 3), __leaf__, __nothrow__)) ;
int rpmatch(char  const *__response) __attribute__ ((__nonnull__(1), __leaf__,
	__nothrow__)) ;
int getsubopt(char ** __restrict __optionp, char * const * __restrict __tokens,
	char ** __restrict __valuep) __attribute__ ((__nonnull__(1, 2, 3),
	__leaf__, __nothrow__)) ;
int getloadavg(double __loadavg[], int __nelem) __attribute__ ((__nonnull__(1),
	__leaf__, __nothrow__)) ;

int binarySearch(int *arr, int target)
{
	char __tmp_0__ = 0;
	int __return__;
	int left = 0;
	int right = 500 - 1;
# 12 "src/main.c"
	while(!__tmp_0__ && left <= right)
# 12 "src/main.c"
	{
		int mid = left + ((right - left)) / 2;
# 14 "src/main.c"
		if(arr[mid] == target)
# 14 "src/main.c"
		{
# 15 "src/main.c"
			__return__ = mid;
			__tmp_0__ = 1 != 0;
		}
		if(!__tmp_0__)
		{
# 17 "src/main.c"
			if(arr[mid] < target)
# 17 "src/main.c"
			{
# 18 "src/main.c"
				left = mid + 1;
			}
			else
# 20 "src/main.c"
# 20 "src/main.c"
			{
# 21 "src/main.c"
				right = mid - 1;
			}
		}
	}
# 24 "src/main.c"
	if(!__tmp_0__)
		__return__ = -1;
	__tmp_0__ = 0;
	return __return__;
}

void bubbleSort(int arr_0[])
{
	char __tmp_0___0 = 0;
	int temp;
	int swapped;
	int i, j;
# 31 "src/main.c"
	for(i = 0; !__tmp_0___0 && i < 500 - 1; __tmp_0___0 || i++)
# 31 "src/main.c"
	{
# 32 "src/main.c"
		swapped = 0;
# 33 "src/main.c"
		for(j = 0; j < 500 - i - 1; j++)
# 33 "src/main.c"
		{
# 34 "src/main.c"
			if(arr_0[j] > arr_0[j + 1])
# 34 "src/main.c"
			{
# 35 "src/main.c"
				temp = arr_0[j];
# 36 "src/main.c"
				arr_0[j] = arr_0[j + 1];
# 37 "src/main.c"
				arr_0[j + 1] = temp;
# 38 "src/main.c"
				swapped = 1;
			}
		}
# 41 "src/main.c"
		if(swapped == 0)
# 41 "src/main.c"
		{
# 42 "src/main.c"
			__tmp_0___0 = 1 != 0;
		}
	}
	__tmp_0___0 = 0;
}

void generateArray(int *arr_1)
{
	int i_0;
# 49 "src/main.c"
	for(i_0 = 0; i_0 < 500; i_0++)
# 49 "src/main.c"
	{
# 50 "src/main.c"
		arr_1[i_0] = i_0;
	}
}

void generateArrayInvert(int *arr_2)
{
	int i_1;
# 56 "src/main.c"
	for(i_1 = 0; i_1 < 500; i_1++)
# 56 "src/main.c"
	{
# 57 "src/main.c"
		arr_2[500 - i_1 - 1] = i_1;
	}
}

int main(void )
{
	int arr_3[500];
	int target_0 = 500 + 1;
# 71 "src/main.c"
	generateArrayInvert(arr_3);
# 72 "src/main.c"
	bubbleSort(arr_3);
# 76 "src/main.c"
	return 0;
}

